name: 'Get release types'
description: 'Get release types of pr identified by having commit_sha=github.event.release.target_commitish'
inputs:
  target_commitish:
    description: 'The string to extract PR number from'
    required: true
outputs:
  is_app_release:
    description: 'The extracted PR number'
    value: ${{ steps.get_release_type.outputs.is_app_release }}
  pr_number:
    description: 'The extracted PR number'
    value: ${{ steps.get_release_type.outputs.is_terraform_release }}  
runs:
  using: 'composite'
  steps:
    - id: get_release_type
      run: |
        echo "Attempting to communicate with api"
        pr_count=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all | jq length)
        output=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all)
        echo $pr_count

        for ((i=0; i<$pr_count; i++)); do
          commit_sha=$(echo $output | jq -r ".[$i].merge_commit_sha")
          if [[ $commit_sha == "${{inputs.target_commitish}}" ]]; then
            pr_idx=$i
            break
          fi
        done

        label_list_string=$(echo $output | jq ".[$pr_idx].labels[].name")

        if echo "$label_list_string" | grep -q '"app"'; then
            echo "is_app_release=true" >> $GITHUB_OUTPUT
        fi

        if echo "$label_list_string" | grep -q '"terraform"'; then
            echo "is_terraform_release=true" >> $GITHUB_OUTPUT
        fi

      shell: bash
